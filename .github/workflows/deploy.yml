name: Deployment

concurrency: production

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        env:
          GITHUB_URL: ${{ github.server_url }}/${{ github.repository }}
          BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          fingerprint: ${{ secrets.FINGERPRINT }}
          debug: true
          envs: GITHUB_URL,BOT_TOKEN,DEPLOY_PATH
          script: |
            cd $DEPLOY_PATH
            if cd server; then
              docker compose down
              git fetch --all
              git reset --hard origin/main
            else
              git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY server
            fi
            dasel -f config/Discord-Integration.toml put string 'general.botToken' $BOT_TOKEN
            docker compose pull
            docker compose up -d
      - name: Get release info
        id: release_info
        uses: jossef/action-latest-release-info@v1.1.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Post release notes to Discord
        uses: LeGitHubDeTai/github-to-discord@main
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          MESSAGE_TITLE: ${{ steps.release_info.name }}
          MESSAGE_DESCRIPTION: ${{ steps.release_info.tag_name }}
          MESSAGE_URL: ${{ steps.release_info.html_url }}
          MESSAGE_COLOR: 0x5AC0DE
          SECTION_NAME: "Changes"
          AUTHOR_NAME: "Peak"
          AUTHOR_URL: "https://peaksmp.org"
          AUTHOR_AVATAR: "https://cdn.discordapp.com/attachments/914670849204822046/923360021516025926/peak-discord.png"

